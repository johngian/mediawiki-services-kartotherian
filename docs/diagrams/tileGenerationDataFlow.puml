@startuml
|#AntiqueWhite|tilerator|
(T)
:Tilerator is triggered
with a list of expired
tiles to be re-generated,
tile ranges are created
accordingly and become
a job. It's worth to
mention that Job can
split themselves if
they have to much data
to process;
:Tilerator start Job
queue for tile
generating processing,
all data is registered
at Redis;
|Redis|
:Creates Job Queue;
|tilerator|
repeat
:interact with Job Queue;
|Redis|
:Queue is updated
according to Tilerator
processing, returning
parameters to create
a job;
|tilerator|
:create Job;
:Job invokes mapnik;
|mapnik|
:receives configuration;
:fetches OSM data;
|PostgreSQL DB|
:returns requested
geo data;
|mapnik|
:receive geo data and
create vector-tiles;
|tilerator|
:receives vector-tile
from mapnik output;
:stores vector-tile in
the Cassandra v4
namespace;
|Cassandra|
:writes data
received from
tilerator;
repeatwhile (<b>Job Queue
<b>is not empty)
end
@enduml
